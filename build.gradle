plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// Version strings used for CI
// Note the spaces before and after the equals sign
ext.majorVersion = 6
ext.minorVersion = 4
ext.minecraftVersion = "1.14"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    // mavenLocal()

    maven {
        name 'Spigot'
        url 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }

    maven {
        name 'Sonatype'
        url 'https://oss.sonatype.org/content/groups/public'
    }

    maven {
        name 'vault-repo'
        url 'http://nexus.hc.to/content/repositories/pub_releases'
    }

    maven {
        name 'ess-repo'
        url 'http://repo.ess3.net/content/groups/essentials'
    }

    maven {
        name 'NyaaCentral'
        url 'https://raw.githubusercontent.com/NyaaCat/NyaaCentral/maven-repo'
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
}

dependencies {
    // spigot dependencies
    compileOnly "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"
    compileOnly 'io.netty:netty-all:4.1.25.Final' // netty is shadowed inside spigot jar
    compileOnly files('lib/spigot-1.14.jar')    // for NMS
    // compileOnly files('lib/patched_1.14.jar')    // for Paper NMS

    // other plugins
    compileOnly('net.milkbowl.vault:VaultAPI:1.7') { transitive = false }
    compileOnly('net.ess3:Essentials:2.13-SNAPSHOT') { transitive = false }
    if (gradle.hasProperty("useLocalDependencies") && gradle.useLocalDependencies) {
        compileOnly project(":LanguageUtils")
    } else {
        compileOnly 'cat.nyaa:LangUtils:2.1-SNAPSHOT'
    }

    // 3rd party packages to be shadowed
    api 'javax.persistence:javax.persistence-api:2.2'
    api 'com.udojava:EvalEx:2.1'
    shadow 'javax.persistence:javax.persistence-api:2.2'
    shadow 'com.udojava:EvalEx:2.1'

    // Annotation precessor
    compileOnly 'org.librazy:NyaaUtilsLangChecker:2.0-SNAPSHOT'
    annotationProcessor 'org.librazy:NyaaUtilsLangChecker:2.0-SNAPSHOT'
    annotationProcessor "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation files('lib/spigot-1.14.jar')
    testImplementation 'org.mockito:mockito-core:2.18.3'
    testImplementation 'org.xerial:sqlite-jdbc:3.21.0.1'
    testImplementation 'ch.vorburger.mariaDB4j:mariaDB4j:2.2.3'
}

import org.gradle.internal.os.OperatingSystem
String tmpDir = new File(System.getProperty("java.io.tmpdir")).getCanonicalPath()
if (tmpDir.contains(' ')) {
    if (OperatingSystem.current().isWindows()) {
        tmpDir = 'C:\\ProgramData\\NyaaCore\\'
    } else if (OperatingSystem.current().isLinux()) {
        tmpDir = '/tmp/NyaaCore/'
    }
}

test {
    useJUnit()
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
    systemProperty 'java.io.tmpdir', tmpDir
}

compileJava {
    options.compilerArgs += ["-Xplugin:NyaaUtilsLangAnnotationProcessor", "-Xlint:deprecation,unchecked,rawtypes"]
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            groupId "cat.nyaa"
            artifactId "nyaacore"
            version "$majorVersion.$minorVersion-SNAPSHOT"
            from components.java
        }
    }
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}

javadoc {
    (options as StandardJavadocDocletOptions).with {
        links 'https://nyaacat.github.io/NyaaCentral/LangUtils/2.1-mc1.13.1/javadoc/'

        links 'https://docs.oracle.com/javase/8/docs/api/'
        links 'https://hub.spigotmc.org/javadocs/spigot/'
        links 'https://google.github.io/guava/releases/21.0/api/docs/'
        links 'https://ci.md-5.net/job/BungeeCord/ws/chat/target/apidocs/'
        links 'https://netty.io/4.1/api/index.html'

        locale 'en_US'
        encoding 'UTF-8'
        docEncoding 'UTF-8'
        addBooleanOption('keywords', true)

        def currentJavaVersion = JavaVersion.current()
        if (currentJavaVersion > JavaVersion.VERSION_1_9) {
            options.addBooleanOption('html5', true)
        }

        windowTitle = "NyaaCore Javadoc"
        String fullVersion = System.getenv("FULL_VERSION_STRING")
        if (fullVersion != null) {
            docTitle = "<b>NyaaCore</b> " + System.getenv("FULL_VERSION_STRING")
        } else {
            docTitle = "<b>NyaaCore</b>"
        }
    }
}
